{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"tslib","loc":{"line":18,"column":22}},{"name":"@firebase/app","loc":{"line":19,"column":20}},{"name":"@firebase/util","loc":{"line":30,"column":21}},{"name":"./util/util","loc":{"line":23,"column":21}},{"name":"./util/Path","loc":{"line":24,"column":21}},{"name":"./util/VisibilityMonitor","loc":{"line":25,"column":34}},{"name":"./util/OnlineMonitor","loc":{"line":26,"column":30}},{"name":"../realtime/Connection","loc":{"line":28,"column":27}},{"name":"./ServerActions","loc":{"line":31,"column":30}}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"./util/util\");\nvar Path_1 = require(\"./util/Path\");\nvar VisibilityMonitor_1 = require(\"./util/VisibilityMonitor\");\nvar OnlineMonitor_1 = require(\"./util/OnlineMonitor\");\nvar util_5 = require(\"@firebase/util\");\nvar Connection_1 = require(\"../realtime/Connection\");\nvar util_6 = require(\"@firebase/util\");\nvar util_7 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = /** @class */ (function (_super) {\n    tslib_1.__extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !util_7.isNodeSdk()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(util_2.stringify(msg));\n        util_3.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {\n            var warnings = util_1.safeGet(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' +\n                    query\n                        .getQueryParams()\n                        .getIndex()\n                        .toString() +\n                    '\"';\n                var indexPath = query.path.toString();\n                util_4.warn(\"Using an unspecified index. Your data will be downloaded and \" +\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\n                    (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        }\n        else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () { });\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || util_5.isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            }\n            else if (typeof this.authOverride_ === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    }\n                    else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/ p: pathString,\n            /*data*/ d: data\n        };\n        if (hash !== undefined)\n            request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        }\n        else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete)\n                onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/ c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest(/*stats*/ 's', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + util_2.stringify(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        }\n        else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        }\n        else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge*/ false, body['t']);\n        else if (action === 'm')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge=*/ true, body['t']);\n        else if (action === 'c')\n            this.onListenRevoked_(body['p'], body['q']);\n        else if (action === 'ac')\n            this.onAuthRevoked_(body['s'], body['d']);\n        else if (action === 'sd')\n            this.onSecurityDebugPacket_(body);\n        else\n            util_4.error('Unrecognized action received from server: ' +\n                util_2.stringify(action) +\n                '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        util_3.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible &&\n            !this.visible_ &&\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            }\n            else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function () {\n                if (connection_1) {\n                    connection_1.close();\n                }\n                else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function (msg) {\n                util_3.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_\n                .getToken(forceRefresh)\n                .then(function (result) {\n                if (!canceled_1) {\n                    util_4.log('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \n                    /* onKill= */ function (reason) {\n                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                }\n                else {\n                    util_4.log('getToken() completed but was canceled');\n                }\n            })\n                .then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (util_6.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        util_4.warn(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        util_4.log('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        }\n        else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        util_4.log('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (util_1.isEmpty(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\n                if (put.onComplete)\n                    put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0)\n            this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        }\n        else {\n            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete)\n            listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        }\n        else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        }\n        else {\n            if ('msg' in body && typeof console !== 'undefined') {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        util_1.forEach(this.listens_, function (pathString, queries) {\n            util_1.forEach(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i])\n                this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (util_6.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        }\n        else if (util_6.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (util_7.isMobileCordova()) {\n            stats['framework.cordova'] = 1;\n        }\n        else if (util_7.isReactNative()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();\n        return util_1.isEmpty(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions_1.ServerActions));\nexports.PersistentConnection = PersistentConnection;\n\n//# sourceMappingURL=PersistentConnection.js.map\n","map":{"mappings":[{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}}],"sources":{"node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"./util/util\");\nvar Path_1 = require(\"./util/Path\");\nvar VisibilityMonitor_1 = require(\"./util/VisibilityMonitor\");\nvar OnlineMonitor_1 = require(\"./util/OnlineMonitor\");\nvar util_5 = require(\"@firebase/util\");\nvar Connection_1 = require(\"../realtime/Connection\");\nvar util_6 = require(\"@firebase/util\");\nvar util_7 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = /** @class */ (function (_super) {\n    tslib_1.__extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !util_7.isNodeSdk()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(util_2.stringify(msg));\n        util_3.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {\n            var warnings = util_1.safeGet(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' +\n                    query\n                        .getQueryParams()\n                        .getIndex()\n                        .toString() +\n                    '\"';\n                var indexPath = query.path.toString();\n                util_4.warn(\"Using an unspecified index. Your data will be downloaded and \" +\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\n                    (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        }\n        else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () { });\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || util_5.isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            }\n            else if (typeof this.authOverride_ === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    }\n                    else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/ p: pathString,\n            /*data*/ d: data\n        };\n        if (hash !== undefined)\n            request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        }\n        else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete)\n                onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/ c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest(/*stats*/ 's', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + util_2.stringify(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        }\n        else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        }\n        else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge*/ false, body['t']);\n        else if (action === 'm')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge=*/ true, body['t']);\n        else if (action === 'c')\n            this.onListenRevoked_(body['p'], body['q']);\n        else if (action === 'ac')\n            this.onAuthRevoked_(body['s'], body['d']);\n        else if (action === 'sd')\n            this.onSecurityDebugPacket_(body);\n        else\n            util_4.error('Unrecognized action received from server: ' +\n                util_2.stringify(action) +\n                '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        util_3.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible &&\n            !this.visible_ &&\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            }\n            else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function () {\n                if (connection_1) {\n                    connection_1.close();\n                }\n                else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function (msg) {\n                util_3.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_\n                .getToken(forceRefresh)\n                .then(function (result) {\n                if (!canceled_1) {\n                    util_4.log('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \n                    /* onKill= */ function (reason) {\n                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                }\n                else {\n                    util_4.log('getToken() completed but was canceled');\n                }\n            })\n                .then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (util_6.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        util_4.warn(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        util_4.log('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        }\n        else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        util_4.log('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (util_1.isEmpty(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\n                if (put.onComplete)\n                    put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0)\n            this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        }\n        else {\n            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete)\n            listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        }\n        else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        }\n        else {\n            if ('msg' in body && typeof console !== 'undefined') {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        util_1.forEach(this.listens_, function (pathString, queries) {\n            util_1.forEach(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i])\n                this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (util_6.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        }\n        else if (util_6.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (util_7.isMobileCordova()) {\n            stats['framework.cordova'] = 1;\n        }\n        else if (util_7.isReactNative()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();\n        return util_1.isEmpty(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions_1.ServerActions));\nexports.PersistentConnection = PersistentConnection;\n\n//# sourceMappingURL=PersistentConnection.js.map\n"},"lineCount":801}},"hash":"5fa3a8b35fe00cfc4f2aa3c9916d6013","cacheData":{"env":{}}}