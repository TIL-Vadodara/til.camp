{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1526468255000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"../core/util/util","loc":{"line":18,"column":21}},{"name":"../core/storage/storage","loc":{"line":19,"column":24}},{"name":"./Constants","loc":{"line":20,"column":26}},{"name":"./TransportManager","loc":{"line":21,"column":33}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var n=require(\"../core/util/util\"),t=require(\"../core/storage/storage\"),o=require(\"./Constants\"),e=require(\"./TransportManager\"),s=6e4,i=5e3,r=10240,a=102400,h=\"t\",c=\"d\",_=\"s\",d=\"r\",l=\"e\",y=\"o\",p=\"a\",u=\"n\",g=\"p\",C=\"h\",f=function(){function f(t,o,s,i,r,a,h){this.id=t,this.repoInfo_=o,this.onMessage_=s,this.onReady_=i,this.onDisconnect_=r,this.onKill_=a,this.lastSessionId=h,this.connectionCount=0,this.pendingDataMessages=[],this.state_=0,this.log_=n.logWrapper(\"c:\"+this.id+\":\"),this.transportManager_=new e.TransportManager(o),this.log_(\"Connection created\"),this.start_()}return f.prototype.start_=function(){var t=this,o=this.transportManager_.initialTransport();this.conn_=new o(this.nextTransportId_(),this.repoInfo_,void 0,this.lastSessionId),this.primaryResponsesRequired_=o.responsesRequiredToBeHealthy||0;var e=this.connReceiver_(this.conn_),s=this.disconnReceiver_(this.conn_);this.tx_=this.conn_,this.rx_=this.conn_,this.secondaryConn_=null,this.isHealthy_=!1,setTimeout(function(){t.conn_&&t.conn_.open(e,s)},Math.floor(0));var i=o.healthyTimeout||0;i>0&&(this.healthyTimeout_=n.setTimeoutNonBlocking(function(){t.healthyTimeout_=null,t.isHealthy_||(t.conn_&&t.conn_.bytesReceived>a?(t.log_(\"Connection exceeded healthy timeout but has received \"+t.conn_.bytesReceived+\" bytes.  Marking connection healthy.\"),t.isHealthy_=!0,t.conn_.markConnectionHealthy()):t.conn_&&t.conn_.bytesSent>r?t.log_(\"Connection exceeded healthy timeout but has sent \"+t.conn_.bytesSent+\" bytes.  Leaving connection alive.\"):(t.log_(\"Closing unhealthy connection after timeout.\"),t.close()))},Math.floor(i)))},f.prototype.nextTransportId_=function(){return\"c:\"+this.id+\":\"+this.connectionCount++},f.prototype.disconnReceiver_=function(n){var t=this;return function(o){n===t.conn_?t.onConnectionLost_(o):n===t.secondaryConn_?(t.log_(\"Secondary connection lost.\"),t.onSecondaryConnectionLost_()):t.log_(\"closing an old connection\")}},f.prototype.connReceiver_=function(n){var t=this;return function(o){2!=t.state_&&(n===t.rx_?t.onPrimaryMessageReceived_(o):n===t.secondaryConn_?t.onSecondaryMessageReceived_(o):t.log_(\"message on old connection\"))}},f.prototype.sendRequest=function(n){var t={t:\"d\",d:n};this.sendData_(t)},f.prototype.tryCleanupConnection=function(){this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_&&(this.log_(\"cleaning up and promoting a connection: \"+this.secondaryConn_.connId),this.conn_=this.secondaryConn_,this.secondaryConn_=null)},f.prototype.onSecondaryControl_=function(n){if(h in n){var t=n[h];t===p?this.upgradeIfSecondaryHealthy_():t===d?(this.log_(\"Got a reset on secondary, closing it\"),this.secondaryConn_.close(),this.tx_!==this.secondaryConn_&&this.rx_!==this.secondaryConn_||this.close()):t===y&&(this.log_(\"got pong on secondary.\"),this.secondaryResponsesRequired_--,this.upgradeIfSecondaryHealthy_())}},f.prototype.onSecondaryMessageReceived_=function(t){var o=n.requireKey(\"t\",t),e=n.requireKey(\"d\",t);if(\"c\"==o)this.onSecondaryControl_(e);else{if(\"d\"!=o)throw new Error(\"Unknown protocol layer: \"+o);this.pendingDataMessages.push(e)}},f.prototype.upgradeIfSecondaryHealthy_=function(){this.secondaryResponsesRequired_<=0?(this.log_(\"Secondary connection is healthy.\"),this.isHealthy_=!0,this.secondaryConn_.markConnectionHealthy(),this.proceedWithUpgrade_()):(this.log_(\"sending ping on secondary.\"),this.secondaryConn_.send({t:\"c\",d:{t:g,d:{}}}))},f.prototype.proceedWithUpgrade_=function(){this.secondaryConn_.start(),this.log_(\"sending client ack on secondary\"),this.secondaryConn_.send({t:\"c\",d:{t:p,d:{}}}),this.log_(\"Ending transmission on primary\"),this.conn_.send({t:\"c\",d:{t:u,d:{}}}),this.tx_=this.secondaryConn_,this.tryCleanupConnection()},f.prototype.onPrimaryMessageReceived_=function(t){var o=n.requireKey(\"t\",t),e=n.requireKey(\"d\",t);\"c\"==o?this.onControl_(e):\"d\"==o&&this.onDataMessage_(e)},f.prototype.onDataMessage_=function(n){this.onPrimaryResponse_(),this.onMessage_(n)},f.prototype.onPrimaryResponse_=function(){this.isHealthy_||(this.primaryResponsesRequired_--,this.primaryResponsesRequired_<=0&&(this.log_(\"Primary connection is healthy.\"),this.isHealthy_=!0,this.conn_.markConnectionHealthy()))},f.prototype.onControl_=function(t){var o=n.requireKey(h,t);if(c in t){var e=t[c];if(o===C)this.onHandshake_(e);else if(o===u){this.log_(\"recvd end transmission on primary\"),this.rx_=this.secondaryConn_;for(var s=0;s<this.pendingDataMessages.length;++s)this.onDataMessage_(this.pendingDataMessages[s]);this.pendingDataMessages=[],this.tryCleanupConnection()}else o===_?this.onConnectionShutdown_(e):o===d?this.onReset_(e):o===l?n.error(\"Server Error: \"+e):o===y?(this.log_(\"got pong on primary.\"),this.onPrimaryResponse_(),this.sendPingOnPrimaryIfNecessary_()):n.error(\"Unknown control packet command: \"+o)}},f.prototype.onHandshake_=function(t){var e=t.ts,s=t.v,i=t.h;this.sessionId=t.s,this.repoInfo_.updateHost(i),0==this.state_&&(this.conn_.start(),this.onConnectionEstablished_(this.conn_,e),o.PROTOCOL_VERSION!==s&&n.warn(\"Protocol version mismatch detected\"),this.tryStartUpgrade_())},f.prototype.tryStartUpgrade_=function(){var n=this.transportManager_.upgradeTransport();n&&this.startUpgrade_(n)},f.prototype.startUpgrade_=function(t){var o=this;this.secondaryConn_=new t(this.nextTransportId_(),this.repoInfo_,this.sessionId),this.secondaryResponsesRequired_=t.responsesRequiredToBeHealthy||0;var e=this.connReceiver_(this.secondaryConn_),i=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(e,i),n.setTimeoutNonBlocking(function(){o.secondaryConn_&&(o.log_(\"Timed out trying to upgrade.\"),o.secondaryConn_.close())},Math.floor(s))},f.prototype.onReset_=function(n){this.log_(\"Reset packet received.  New host: \"+n),this.repoInfo_.updateHost(n),1===this.state_?this.close():(this.closeConnections_(),this.start_())},f.prototype.onConnectionEstablished_=function(t,o){var e=this;this.log_(\"Realtime connection established.\"),this.conn_=t,this.state_=1,this.onReady_&&(this.onReady_(o,this.sessionId),this.onReady_=null),0===this.primaryResponsesRequired_?(this.log_(\"Primary connection is healthy.\"),this.isHealthy_=!0):n.setTimeoutNonBlocking(function(){e.sendPingOnPrimaryIfNecessary_()},Math.floor(i))},f.prototype.sendPingOnPrimaryIfNecessary_=function(){this.isHealthy_||1!==this.state_||(this.log_(\"sending ping on primary.\"),this.sendData_({t:\"c\",d:{t:g,d:{}}}))},f.prototype.onSecondaryConnectionLost_=function(){var n=this.secondaryConn_;this.secondaryConn_=null,this.tx_!==n&&this.rx_!==n||this.close()},f.prototype.onConnectionLost_=function(n){this.conn_=null,n||0!==this.state_?1===this.state_&&this.log_(\"Realtime connection lost.\"):(this.log_(\"Realtime connection failed.\"),this.repoInfo_.isCacheableHost()&&(t.PersistentStorage.remove(\"host:\"+this.repoInfo_.host),this.repoInfo_.internalHost=this.repoInfo_.host)),this.close()},f.prototype.onConnectionShutdown_=function(n){this.log_(\"Connection shutdown command received. Shutting down...\"),this.onKill_&&(this.onKill_(n),this.onKill_=null),this.onDisconnect_=null,this.close()},f.prototype.sendData_=function(n){if(1!==this.state_)throw\"Connection is not connected\";this.tx_.send(n)},f.prototype.close=function(){2!==this.state_&&(this.log_(\"Closing realtime connection.\"),this.state_=2,this.closeConnections_(),this.onDisconnect_&&(this.onDisconnect_(),this.onDisconnect_=null))},f.prototype.closeConnections_=function(){this.log_(\"Shutting down all connections\"),this.conn_&&(this.conn_.close(),this.conn_=null),this.secondaryConn_&&(this.secondaryConn_.close(),this.secondaryConn_=null),this.healthyTimeout_&&(clearTimeout(this.healthyTimeout_),this.healthyTimeout_=null)},f}();exports.Connection=f;"},"hash":"34b8a84d461edbec5066edee731e4252","cacheData":{"env":{}}}