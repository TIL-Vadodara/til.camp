{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"../core/util/util","loc":{"line":18,"column":21}},{"name":"../core/storage/storage","loc":{"line":19,"column":24}},{"name":"./Constants","loc":{"line":20,"column":26}},{"name":"./TransportManager","loc":{"line":21,"column":33}}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar Constants_1 = require(\"./Constants\");\nvar TransportManager_1 = require(\"./TransportManager\");\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nvar Connection = /** @class */ (function () {\n    /**\n     * @param {!string} id - an id for this connection\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = util_1.logWrapper('c:' + this.id + ':');\n        this.transportManager_ = new TransportManager_1.TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\n     * Starts a connection attempt\n     * @private\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n         * still have the context of your originating frame.\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = util_1.setTimeoutNonBlocking(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ &&\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\n                            _this.conn_.bytesReceived +\n                            ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    }\n                    else if (_this.conn_ &&\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\n                            _this.conn_.bytesSent +\n                            ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    }\n                    else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\n     * @return {!string}\n     * @private\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            }\n            else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            }\n            else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                if (conn === _this.rx_) {\n                    _this.onPrimaryMessageReceived_(message);\n                }\n                else if (conn === _this.secondaryConn_) {\n                    _this.onSecondaryMessageReceived_(message);\n                }\n                else {\n                    _this.log_('message on old connection');\n                }\n            }\n        };\n    };\n    /**\n     *\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            }\n            else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ ||\n                    this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        }\n        else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        }\n        else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        }\n        else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        }\n        else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = util_1.requireKey(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            }\n            else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            }\n            else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            }\n            else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            }\n            else if (cmd === CONTROL_ERROR) {\n                util_1.error('Server Error: ' + payload);\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            }\n            else {\n                util_1.error('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Object} handshake The handshake data returned from the server\n     * @private\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n            this.conn_.start();\n            this.onConnectionEstablished_(this.conn_, timestamp);\n            if (Constants_1.PROTOCOL_VERSION !== version) {\n                util_1.warn('Protocol version mismatch detected');\n            }\n            // TODO: do we want to upgrade? when? maybe a delay?\n            this.tryStartUpgrade_();\n        }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ =\n            conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        util_1.setTimeoutNonBlocking(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n            this.close();\n        }\n        else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        }\n        else {\n            util_1.setTimeoutNonBlocking(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n            this.log_('sending ping on primary.');\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\n     *\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n     * we should flush the host cache\n     * @private\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n            this.log_('Realtime connection failed.');\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n            if (this.repoInfo_.isCacheableHost()) {\n                storage_1.PersistentStorage.remove('host:' + this.repoInfo_.host);\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                this.repoInfo_.internalHost = this.repoInfo_.host;\n            }\n        }\n        else if (this.state_ === 1 /* CONNECTED */) {\n            this.log_('Realtime connection lost.');\n        }\n        this.close();\n    };\n    /**\n     *\n     * @param {string} reason\n     * @private\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n            throw 'Connection is not connected';\n        }\n        else {\n            this.tx_.send(data);\n        }\n    };\n    /**\n     * Cleans up this connection, calling the appropriate callbacks\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n            this.log_('Closing realtime connection.');\n            this.state_ = 2 /* DISCONNECTED */;\n            this.closeConnections_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_();\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n","map":{"mappings":[{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}}],"sources":{"node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar Constants_1 = require(\"./Constants\");\nvar TransportManager_1 = require(\"./TransportManager\");\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nvar Connection = /** @class */ (function () {\n    /**\n     * @param {!string} id - an id for this connection\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = util_1.logWrapper('c:' + this.id + ':');\n        this.transportManager_ = new TransportManager_1.TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\n     * Starts a connection attempt\n     * @private\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n         * still have the context of your originating frame.\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = util_1.setTimeoutNonBlocking(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ &&\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\n                            _this.conn_.bytesReceived +\n                            ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    }\n                    else if (_this.conn_ &&\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\n                            _this.conn_.bytesSent +\n                            ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    }\n                    else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\n     * @return {!string}\n     * @private\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            }\n            else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            }\n            else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                if (conn === _this.rx_) {\n                    _this.onPrimaryMessageReceived_(message);\n                }\n                else if (conn === _this.secondaryConn_) {\n                    _this.onSecondaryMessageReceived_(message);\n                }\n                else {\n                    _this.log_('message on old connection');\n                }\n            }\n        };\n    };\n    /**\n     *\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            }\n            else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ ||\n                    this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        }\n        else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        }\n        else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        }\n        else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        }\n        else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = util_1.requireKey(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            }\n            else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            }\n            else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            }\n            else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            }\n            else if (cmd === CONTROL_ERROR) {\n                util_1.error('Server Error: ' + payload);\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            }\n            else {\n                util_1.error('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Object} handshake The handshake data returned from the server\n     * @private\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n            this.conn_.start();\n            this.onConnectionEstablished_(this.conn_, timestamp);\n            if (Constants_1.PROTOCOL_VERSION !== version) {\n                util_1.warn('Protocol version mismatch detected');\n            }\n            // TODO: do we want to upgrade? when? maybe a delay?\n            this.tryStartUpgrade_();\n        }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ =\n            conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        util_1.setTimeoutNonBlocking(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n            this.close();\n        }\n        else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        }\n        else {\n            util_1.setTimeoutNonBlocking(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n            this.log_('sending ping on primary.');\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\n     *\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n     * we should flush the host cache\n     * @private\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n            this.log_('Realtime connection failed.');\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n            if (this.repoInfo_.isCacheableHost()) {\n                storage_1.PersistentStorage.remove('host:' + this.repoInfo_.host);\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                this.repoInfo_.internalHost = this.repoInfo_.host;\n            }\n        }\n        else if (this.state_ === 1 /* CONNECTED */) {\n            this.log_('Realtime connection lost.');\n        }\n        this.close();\n    };\n    /**\n     *\n     * @param {string} reason\n     * @private\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n            throw 'Connection is not connected';\n        }\n        else {\n            this.tx_.send(data);\n        }\n    };\n    /**\n     * Cleans up this connection, calling the appropriate callbacks\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n            this.log_('Closing realtime connection.');\n            this.state_ = 2 /* DISCONNECTED */;\n            this.closeConnections_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_();\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n"},"lineCount":494}},"hash":"7de642f5de0745809f9b45dc46cfd5f4","cacheData":{"env":{}}}