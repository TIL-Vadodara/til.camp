{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1526468255000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/messaging/package.json","includedInParent":true,"mtime":1519337717000},{"name":"@firebase/util","loc":{"line":17,"column":29}},{"name":"./errors","loc":{"line":18,"column":19}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"@firebase/util\"),r=require(\"./errors\"),t=o(r);function o(e){return e&&e.__esModule?e:{default:e}}var n=function(){function r(r,o){this.errorFactory_=new e.ErrorFactory(\"messaging\",\"Messaging\",t.default.map),this.DB_NAME_=r,this.dbVersion_=o,this.openDbPromise_=null,this.TRANSACTION_READ_WRITE=\"readwrite\"}return r.prototype.openDatabase=function(){var e=this;return this.openDbPromise_?this.openDbPromise_:(this.openDbPromise_=new Promise(function(r,t){var o=indexedDB.open(e.DB_NAME_,e.dbVersion_);o.onerror=function(e){t(e.target.error)},o.onsuccess=function(e){r(e.target.result)},o.onupgradeneeded=function(r){try{var o=r.target.result;e.onDBUpgrade(o,r)}catch(e){o.close(),t(e)}}}),this.openDbPromise_)},r.prototype.closeDatabase=function(){var e=this;return Promise.resolve().then(function(){if(e.openDbPromise_)return e.openDbPromise_.then(function(r){r.close(),e.openDbPromise_=null})})},r.prototype.onDBUpgrade=function(e,r){throw this.errorFactory_.create(t.default.codes.SHOULD_BE_INHERITED)},r}();exports.default=n;"},"hash":"96dcd7d9484bfb75c505e11c45839441","cacheData":{"env":{}}}