{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"./util/ServerValues","loc":{"line":18,"column":29}},{"name":"./snap/nodeFromJSON","loc":{"line":19,"column":29}},{"name":"./util/Path","loc":{"line":20,"column":21}},{"name":"./SparseSnapshotTree","loc":{"line":21,"column":35}},{"name":"./SyncTree","loc":{"line":22,"column":25}},{"name":"./SnapshotHolder","loc":{"line":23,"column":31}},{"name":"@firebase/util","loc":{"line":26,"column":21}},{"name":"./util/util","loc":{"line":25,"column":21}},{"name":"./AuthTokenProvider","loc":{"line":27,"column":34}},{"name":"./stats/StatsManager","loc":{"line":28,"column":29}},{"name":"./stats/StatsReporter","loc":{"line":29,"column":30}},{"name":"./stats/StatsListener","loc":{"line":30,"column":30}},{"name":"./view/EventQueue","loc":{"line":31,"column":27}},{"name":"./PersistentConnection","loc":{"line":32,"column":37}},{"name":"./ReadonlyRestClient","loc":{"line":33,"column":35}},{"name":"../api/Database","loc":{"line":34,"column":25}}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar Path_1 = require(\"./util/Path\");\nvar SparseSnapshotTree_1 = require(\"./SparseSnapshotTree\");\nvar SyncTree_1 = require(\"./SyncTree\");\nvar SnapshotHolder_1 = require(\"./SnapshotHolder\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar AuthTokenProvider_1 = require(\"./AuthTokenProvider\");\nvar StatsManager_1 = require(\"./stats/StatsManager\");\nvar StatsReporter_1 = require(\"./stats/StatsReporter\");\nvar StatsListener_1 = require(\"./stats/StatsListener\");\nvar EventQueue_1 = require(\"./view/EventQueue\");\nvar PersistentConnection_1 = require(\"./PersistentConnection\");\nvar ReadonlyRestClient_1 = require(\"./ReadonlyRestClient\");\nvar Database_1 = require(\"../api/Database\");\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue_1.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || util_2.beingCrawled()) {\n            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        }\n        else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if (typeof authOverride !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    util_1.stringify(authOverride);\n                }\n                catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function () { }\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function (query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return ServerValues_1.generateWithValues({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path_1.Path(pathString);\n        data = this.interceptServerDataCallback_\n            ? this.interceptServerDataCallback_(pathString, data)\n            : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = util_3.map(data, function (raw) {\n                    return nodeFromJSON_1.nodeFromJSON(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            }\n            else {\n                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        }\n        else if (isMerge) {\n            var changedChildren = util_3.map(data, function (raw) {\n                return nodeFromJSON_1.nodeFromJSON(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        }\n        else {\n            var snap = nodeFromJSON_1.nodeFromJSON(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        util_2.each(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path_1.Path('/.info/' + pathString);\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                util_2.warn('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);\n            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    util_2.warn('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            util_3.forEach(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        }\n        else {\n            util_2.log(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (util_3.isEmpty(childrenToMerge)) {\n            util_2.log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                util_3.forEach(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) { showDelta = false; }\n        if (typeof console === 'undefined')\n            return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_)\n                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        }\n        else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        util_3.forEach(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++)\n                stat += ' ';\n            console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util_2.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            util_2.exceptionGuard(function () {\n                if (status == 'ok') {\n                    callback(null);\n                }\n                else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason)\n                        message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function () {\n            return this.__database || (this.__database = new Database_1.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}());\nexports.Repo = Repo;\n\n//# sourceMappingURL=Repo.js.map\n","map":{"mappings":[{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/Repo.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}}],"sources":{"node_modules/@firebase/database/dist/cjs/src/core/Repo.js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar Path_1 = require(\"./util/Path\");\nvar SparseSnapshotTree_1 = require(\"./SparseSnapshotTree\");\nvar SyncTree_1 = require(\"./SyncTree\");\nvar SnapshotHolder_1 = require(\"./SnapshotHolder\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar AuthTokenProvider_1 = require(\"./AuthTokenProvider\");\nvar StatsManager_1 = require(\"./stats/StatsManager\");\nvar StatsReporter_1 = require(\"./stats/StatsReporter\");\nvar StatsListener_1 = require(\"./stats/StatsListener\");\nvar EventQueue_1 = require(\"./view/EventQueue\");\nvar PersistentConnection_1 = require(\"./PersistentConnection\");\nvar ReadonlyRestClient_1 = require(\"./ReadonlyRestClient\");\nvar Database_1 = require(\"../api/Database\");\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue_1.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || util_2.beingCrawled()) {\n            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        }\n        else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if (typeof authOverride !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    util_1.stringify(authOverride);\n                }\n                catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function () { }\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function (query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return ServerValues_1.generateWithValues({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path_1.Path(pathString);\n        data = this.interceptServerDataCallback_\n            ? this.interceptServerDataCallback_(pathString, data)\n            : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = util_3.map(data, function (raw) {\n                    return nodeFromJSON_1.nodeFromJSON(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            }\n            else {\n                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        }\n        else if (isMerge) {\n            var changedChildren = util_3.map(data, function (raw) {\n                return nodeFromJSON_1.nodeFromJSON(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        }\n        else {\n            var snap = nodeFromJSON_1.nodeFromJSON(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        util_2.each(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path_1.Path('/.info/' + pathString);\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                util_2.warn('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);\n            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    util_2.warn('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            util_3.forEach(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        }\n        else {\n            util_2.log(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (util_3.isEmpty(childrenToMerge)) {\n            util_2.log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                util_3.forEach(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) { showDelta = false; }\n        if (typeof console === 'undefined')\n            return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_)\n                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        }\n        else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        util_3.forEach(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++)\n                stat += ' ';\n            console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util_2.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            util_2.exceptionGuard(function () {\n                if (status == 'ok') {\n                    callback(null);\n                }\n                else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason)\n                        message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function () {\n            return this.__database || (this.__database = new Database_1.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}());\nexports.Repo = Repo;\n\n//# sourceMappingURL=Repo.js.map\n"},"lineCount":529}},"hash":"c1cfbb891b75ad19d6dd4cc836f8577b","cacheData":{"env":{}}}