{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1526468255000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"@firebase/util","loc":{"line":18,"column":21}},{"name":"../util/Path","loc":{"line":19,"column":21}},{"name":"./Operation","loc":{"line":20,"column":26}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"@firebase/util\"),t=require(\"../util/Path\"),r=require(\"./Operation\"),i=function(){function i(e,t,i){this.path=e,this.affectedTree=t,this.revert=i,this.type=r.OperationType.ACK_USER_WRITE,this.source=r.OperationSource.User}return i.prototype.operationForChild=function(r){if(this.path.isEmpty()){if(null!=this.affectedTree.value)return e.assert(this.affectedTree.children.isEmpty(),\"affectedTree should not have overlapping affected paths.\"),this;var s=this.affectedTree.subtree(new t.Path(r));return new i(t.Path.Empty,s,this.revert)}return e.assert(this.path.getFront()===r,\"operationForChild called for unrelated child.\"),new i(this.path.popFront(),this.affectedTree,this.revert)},i}();exports.AckUserWrite=i;"},"hash":"35fa14acc5a033ba2aead5efe17bf32f","cacheData":{"env":{}}}