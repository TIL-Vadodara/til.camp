{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"./filter/IndexedFilter","loc":{"line":18,"column":30}},{"name":"./ViewProcessor","loc":{"line":19,"column":30}},{"name":"../snap/ChildrenNode","loc":{"line":20,"column":29}},{"name":"./CacheNode","loc":{"line":21,"column":26}},{"name":"./ViewCache","loc":{"line":22,"column":26}},{"name":"./EventGenerator","loc":{"line":23,"column":31}},{"name":"@firebase/util","loc":{"line":24,"column":21}},{"name":"../operation/Operation","loc":{"line":25,"column":26}},{"name":"./Change","loc":{"line":26,"column":23}},{"name":"../snap/indexes/PriorityIndex","loc":{"line":27,"column":30}}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar ViewProcessor_1 = require(\"./ViewProcessor\");\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar CacheNode_1 = require(\"./CacheNode\");\nvar ViewCache_1 = require(\"./ViewCache\");\nvar EventGenerator_1 = require(\"./EventGenerator\");\nvar util_1 = require(\"@firebase/util\");\nvar Operation_1 = require(\"../operation/Operation\");\nvar Change_1 = require(\"./Change\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nvar View = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     * @param {!ViewCache} initialViewCache\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\n         * @type {ViewProcessor}\n         * @private\n         */\n        this.processor_ = new ViewProcessor_1.ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new CacheNode_1.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new CacheNode_1.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\n         * @type {!ViewCache}\n         * @private\n         */\n        this.viewCache_ = new ViewCache_1.ViewCache(newEventCache, newServerCache);\n        /**\n         * @type {!EventGenerator}\n         * @private\n         */\n        this.eventGenerator_ = new EventGenerator_1.EventGenerator(this.query_);\n    }\n    /**\n     * @return {!Query}\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\n     * @return {?Node}\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() ||\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\n     * @return {boolean}\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\n     * @param {!EventRegistration} eventRegistration\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            util_1.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                }\n                else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        }\n        else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === Operation_1.OperationType.MERGE &&\n            operation.source.queryId !== null) {\n            util_1.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            util_1.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        util_1.assert(result.viewCache.getServerCache().isFullyInitialized() ||\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\n     * @param {!EventRegistration} registration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                initialChanges.push(Change_1.Change.childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(Change_1.Change.valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\n     * @private\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {EventRegistration=} eventRegistration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration\n            ? [eventRegistration]\n            : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}());\nexports.View = View;\n\n//# sourceMappingURL=View.js.map\n","map":{"mappings":[{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/core/view/View.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}}],"sources":{"node_modules/@firebase/database/dist/cjs/src/core/view/View.js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar ViewProcessor_1 = require(\"./ViewProcessor\");\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar CacheNode_1 = require(\"./CacheNode\");\nvar ViewCache_1 = require(\"./ViewCache\");\nvar EventGenerator_1 = require(\"./EventGenerator\");\nvar util_1 = require(\"@firebase/util\");\nvar Operation_1 = require(\"../operation/Operation\");\nvar Change_1 = require(\"./Change\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nvar View = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     * @param {!ViewCache} initialViewCache\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\n         * @type {ViewProcessor}\n         * @private\n         */\n        this.processor_ = new ViewProcessor_1.ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new CacheNode_1.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new CacheNode_1.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\n         * @type {!ViewCache}\n         * @private\n         */\n        this.viewCache_ = new ViewCache_1.ViewCache(newEventCache, newServerCache);\n        /**\n         * @type {!EventGenerator}\n         * @private\n         */\n        this.eventGenerator_ = new EventGenerator_1.EventGenerator(this.query_);\n    }\n    /**\n     * @return {!Query}\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\n     * @return {?Node}\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() ||\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\n     * @return {boolean}\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\n     * @param {!EventRegistration} eventRegistration\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            util_1.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                }\n                else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        }\n        else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === Operation_1.OperationType.MERGE &&\n            operation.source.queryId !== null) {\n            util_1.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            util_1.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        util_1.assert(result.viewCache.getServerCache().isFullyInitialized() ||\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\n     * @param {!EventRegistration} registration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                initialChanges.push(Change_1.Change.childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(Change_1.Change.valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\n     * @private\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {EventRegistration=} eventRegistration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration\n            ? [eventRegistration]\n            : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}());\nexports.View = View;\n\n//# sourceMappingURL=View.js.map\n"},"lineCount":209}},"hash":"e4fecd1de4e859d73c056564fb040885","cacheData":{"env":{}}}