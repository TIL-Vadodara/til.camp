{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1526468255000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"@firebase/util","loc":{"line":20,"column":21}},{"name":"./Change","loc":{"line":19,"column":23}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"@firebase/util\"),a=require(\"./Change\"),n=require(\"@firebase/util\"),h=function(){function h(){this.changeMap_={}}return h.prototype.trackChildChange=function(h){var t=h.type,C=h.childName;n.assert(t==a.Change.CHILD_ADDED||t==a.Change.CHILD_CHANGED||t==a.Change.CHILD_REMOVED,\"Only child changes supported for tracking\"),n.assert(\".priority\"!==C,\"Only non-priority child changes can be tracked.\");var i=e.safeGet(this.changeMap_,C);if(i){var g=i.type;if(t==a.Change.CHILD_ADDED&&g==a.Change.CHILD_REMOVED)this.changeMap_[C]=a.Change.childChangedChange(C,h.snapshotNode,i.snapshotNode);else if(t==a.Change.CHILD_REMOVED&&g==a.Change.CHILD_ADDED)delete this.changeMap_[C];else if(t==a.Change.CHILD_REMOVED&&g==a.Change.CHILD_CHANGED)this.changeMap_[C]=a.Change.childRemovedChange(C,i.oldSnap);else if(t==a.Change.CHILD_CHANGED&&g==a.Change.CHILD_ADDED)this.changeMap_[C]=a.Change.childAddedChange(C,h.snapshotNode);else{if(t!=a.Change.CHILD_CHANGED||g!=a.Change.CHILD_CHANGED)throw n.assertionError(\"Illegal combination of changes: \"+h+\" occurred after \"+i);this.changeMap_[C]=a.Change.childChangedChange(C,h.snapshotNode,i.oldSnap)}}else this.changeMap_[C]=h},h.prototype.getChanges=function(){return e.getValues(this.changeMap_)},h}();exports.ChildChangeAccumulator=h;"},"hash":"fa96007469b2c5a2f81313da6e1d168f","cacheData":{"env":{}}}