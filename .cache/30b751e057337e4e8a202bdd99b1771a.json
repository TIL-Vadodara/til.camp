{"dependencies":[{"name":"/Volumes/Work/forks/til.camp/package.json","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/.browserslistrc","includedInParent":true,"mtime":1524300285000},{"name":"/Volumes/Work/forks/til.camp/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1519337717000},{"name":"@firebase/util","loc":{"line":18,"column":21}},{"name":"../core/util/validation","loc":{"line":19,"column":27}},{"name":"../core/util/Path","loc":{"line":20,"column":21}},{"name":"../core/snap/indexes/PriorityIndex","loc":{"line":21,"column":30}}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar Path_1 = require(\"../core/util/Path\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nvar DataSnapshot = /** @class */ (function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode())\n            return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode())\n            return false;\n        else\n            return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function () {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}());\nexports.DataSnapshot = DataSnapshot;\n\n//# sourceMappingURL=DataSnapshot.js.map\n","map":{"mappings":[{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}}],"sources":{"node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar Path_1 = require(\"../core/util/Path\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nvar DataSnapshot = /** @class */ (function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode())\n            return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode())\n            return false;\n        else\n            return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function () {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}());\nexports.DataSnapshot = DataSnapshot;\n\n//# sourceMappingURL=DataSnapshot.js.map\n"},"lineCount":174}},"hash":"a7ab5eab6fd51b2d08d678da3094e9a3","cacheData":{"env":{}}}